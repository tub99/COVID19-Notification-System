{"version":3,"sources":["components/MapVisualiser.js","components/Tooltip.js","utils/Dataparser.js","components/ComparisonChart.js","components/CovidTable.js","components/TabularInfo.js","components/InfoUpdate.js","utils/Notifier.js","components/MapVisualiserContainer.js","App.js","serviceWorker.js","index.js"],"names":["d3","Object","assign","require","MapVisualiser","props","state","mapData","delta","this","initMap","nextProps","setState","requestAnimationFrame","highlightChangedStates","data","shift","animate","color","dur","id","split","join","filledColor","select","style","transition","duration","forEach","isDead","isConfirmed","isRecovered","keys","length","topoMap","states","topojson","objects","india","mapContainerWidth","document","getElementById","clientWidth","scaleValue","body","map","stateMap","features","width","height","scale","call","confirmedList","properties","confirmed","max","Math","apply","min","console","log","colors","that","render","selection","each","scaleLinear","domain","range","remove","svg","append","attr","projection","geoMercator","center","translate","path","geoPath","selectAll","enter","d","on","setTooltip","left","window","event","pageX","top","pageY","opacity","value","arguments","tooltipData","className","React","Component","Tooltip","children","parseMapData","covidData","geometries","i","stateData","getStateByName","ST_NM","ComparisonChart","timeSeriesData","margin","timeParse","x","scalePoint","rangeRound","date","padding","y","valueline","line","dailyconfirmed","valueline2","dailydeceased","valueline3","dailyrecovered","gline1","name","type","gLine2","gLine3","axisBottom","axisLeft","backgroundColor","marginBottom","CovidTable","Table","size","striped","bordered","hover","responsive","variant","deaths","recovered","key","createRows","TabularInfo","todayData","useState","tabularData","setTabularData","useEffect","Container","fluid","Row","Col","Tabs","onSelect","eventKey","Tab","title","InfoUpdate","info","ListGroup","Item","currentdate","Date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","getCurrentDT","infoMessage","createList","MapVisualiserContainer","axios","get","then","resp","totalCases","today","deltaList","timeAnalysis","NotificationManager","Navbar","bg","fontFamily","md","prepareTooltipBody","sm","App","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.41c4d19d.chunk.js","sourcesContent":["import React from 'react';\nimport * as topojson from \"topojson-client\";\n// import data from './../assets/ne_10m_admin_1_India_Official.json';\nimport data from './../assets/india.json';\nvar d3 = Object.assign({}, require(\"d3\"), require(\"d3-geo\"), require(\"d3-queue\"));\n\n\nclass MapVisualiser extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            mapData: {},\n            delta: []\n        }\n    }\n    componentDidMount() {\n        const { mapData } = this.props;\n        this.initMap(mapData);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.state.mapData !== nextProps.mapData) {\n            this.setState({ mapData: nextProps.mapData })\n            this.initMap(nextProps.mapData);\n        }\n        if (this.state.delta !== nextProps.delta) {\n            this.setState({ delta: nextProps.delta });\n            requestAnimationFrame(() => this.highlightChangedStates(nextProps.delta));\n        }\n    }\n\n\n    highlightChangedStates(delta) {\n        let data = [...delta];\n        data.shift();\n        const animate = (state,color, dur=1500000) =>{\n            const id = `#st_${state.state.split(\" \").join(\"_\")}`;\n            const filledColor =  d3.select(id).style('fill');\n            d3.select(`#st_${state.state.split(\" \").join(\"_\")}`)\n            .style('fill', color)\n            .style('opacity', 0.7)\n            .style('stroke-width', '2')\n            .transition()\n            .duration(dur)\n            .style('fill', filledColor)\n            .style('opacity', 1)\n            .style('stroke-width', '1');\n        }\n        data.forEach((state) => {\n\n            if (state.isDead > 0) {\n                animate(state,'#d62525' );\n\n            } else if (state.isConfirmed > 0) {\n                    animate(state,'#ffc107');\n\n            } else if (state.isRecovered > 0) {\n                    animate(state,'#20c997')\n            }\n        })\n    }\n\n    initMap(data) {\n        if (!Object.keys(data).length) return;\n        let topoMap = data;\n        // let states = topojson.feature(topoMap, topoMap.objects.ne_10m_admin_1_India_Official);\n        let states = topojson.feature(topoMap, topoMap.objects.india);\n\n        // Map render\n        let mapContainerWidth = document.getElementById('map').clientWidth - 20,\n            scaleValue = document.body.clientWidth < 500 ? 600 : 800;\n        let map = this.stateMap(states.features).width(mapContainerWidth).height(500).scale(scaleValue);\n        d3.select(\"#map\").call(map);\n    }\n\n    stateMap(states) {\n        const confirmedList = states.map(state => {\n            return state.properties.confirmed;\n        });\n        const max= Math.max.apply(this, confirmedList) || 0;\n        const min  = Math.min.apply(this, confirmedList) || 0;\n        console.log(max,min);\n        var width = 800, height = 700, scale = 160;\n        //var colors = [\"#ffffff\", \"#bcbddc\", \"#9e9ac8\", \"#807dba\", \"#6a51a3\"];\n        var colors = [\"#fff\",  \"#9CA17D\", '#7F9751', '#4D5F2B'];\n        let that = this;\n        function render(selection) {\n            selection.each(function () {\n                var color = d3.scaleLinear()\n                   // .domain([d3.min(states, function (d) {return d.properties.confirmed; }), d3.max(states, function (d) { return d.properties.confirmed; })])\n                  .domain([min,max]) \n                  .range(colors);\n                d3.select(this).select(\"svg\").remove();\n                var svg = d3.select(this).append(\"svg\")\n                    .attr(\"width\", width)\n                    .attr(\"height\", height);\n\n                var projection = d3.geoMercator()\n                    .center([82, 23])\n                    .scale(scale)\n                    .translate([width / 2, height / 2]);\n\n                var path = d3.geoPath().projection(projection);\n                var selectState = svg.selectAll(\"g\").data(states).enter().append(\"g\").attr(\"class\", \"state\");\n                // var div = d3.select(\"body\").append(\"div\")\n                //     .attr(\"class\", \"tooltip\")\n                //     .style(\"opacity\", 0);\n\n\n                // prepares states and it's boudaries\n                selectState.append(\"path\")\n                    .style(\"fill\", function (d) {\n                        return color(d.properties.confirmed)\n                    })\n                    .attr(\"d\", path)\n                    .attr(\"id\", (data) => { return data.properties.id })\n                    .on(\"mouseover\", (d) => {\n                        d3.select('#' + d.properties.id).style('stroke', '#5C603E').style('stroke-width', '2');\n                        that.setTooltip({\n                            ...d.properties,\n                            style: { left: window.event.pageX, top: window.event.pageY - 60, opacity: 1 }\n                        });\n                    })\n                    .on(\"mouseout\", function (d) {\n                        d3.select('#' + d.properties.id).style('stroke', '#000').style('stroke-width', '1');\n                        that.setTooltip({\n                            ...d.properties,\n                            style: { left: window.event.pageX, top: window.event.pageY - 28, opacity: 0 }\n                        });\n                    });\n\n                // svg.selectAll(\"text\").data(states).enter().append(\"text\")\n                //     .attr(\"class\", function (d) { return \"label \" + d.id; })\n                //     .attr(\"transform\", function (d) { return \"translate(\" + path.centroid(d) + \")\"; })\n                //     .attr(\"dy\", \".35em\")\n                //     .text(function (d) { return d.properties.name; });\n            });\n        } // render\n        render.height = function (value) {\n            if (!arguments.length) return height;\n            height = value;\n            return render;\n        };\n        render.width = function (value) {\n            if (!arguments.length) return width;\n            width = value;\n            return render;\n        };\n        render.scale = function (value) {\n            if (!arguments.length) return scale;\n            scale = value;\n            return render;\n        };\n\n        return render;\n    }\n\n    setTooltip(tooltipData) {\n        this.props.setTooltip(tooltipData);\n    }\n    render() {\n        return (\n     \n            <div id=\"map\" className=\"fadeInUp\"></div>\n      \n        );\n    }\n\n}\n\nexport default MapVisualiser;","import React from 'react';\n\nconst Tooltip = (props) => {\n    if(!Object.keys(props).length) return (<></>);\n    return (\n        <div style={{ left: props.style.left + 'px', top: props.style.top + 'px', opacity: props.style.opacity }} className=\"tooltip\">\n            {props.children}\n        </div>\n    )\n}\n\nexport default Tooltip;","const parseMapData = (mapData, covidData) => {\n    let geometries = mapData.objects.india.geometries;\n    geometries = geometries.map((data, i) => {\n        let stateData = getStateByName(covidData, data.properties.ST_NM);\n        if (stateData) {\n            return { ...data, properties: { ...data.properties, ...stateData, id: `st_${data.properties.ST_NM.split(\" \").join(\"_\")}` } };\n        }\n        return data;\n    });\n    mapData.objects.india.geometries = geometries;\n    return mapData;\n}\n\nconst getStateByName = (covidData, state) => {\n    for (let i in covidData) {\n        if (covidData[i].state == state) return covidData[i];\n    }\n    return null;\n}\n\nexport { parseMapData, getStateByName };","import React from \"react\";\nimport './ComparisonChart.css';\nvar d3 = Object.assign(\n  {},\n  require(\"d3\"),\n  require(\"d3-geo\"),\n  require(\"d3-queue\")\n);\n\nclass ComparisonChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timeSeriesData: [],\n    };\n  }\n  componentDidMount() {\n    const { mapData } = this.props;\n    this.initMap(mapData);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.state.timeSeriesData !== nextProps.timeSeriesData) {\n      this.setState({ timeSeriesData: nextProps.timeSeriesData });\n      this.initMap(nextProps.timeSeriesData);\n    }\n  }\n\n  initMap(data) {\n    var that = this;\n    if (!data) return;\n    // set the dimensions and margins of the graph\n    var margin = { top: 20, right: 10, bottom: 30, left: 30 },\n      width =\n        document.getElementById(\"graph\").clientWidth -\n        margin.left -\n        margin.right,\n      height = 400 - margin.top - margin.bottom;\n\n    if (width < 300) {\n      width = 300;\n      height = 300;\n    }\n\n    // parse the date / time\n    var parseTime = d3.timeParse(\"%d-%B-%Y\");\n\n    // set the ranges\n    var x = d3\n      .scalePoint()\n      .rangeRound([0, width])\n      .domain(data.map((d) => d.date))\n      .padding(0.5);\n    //d3.scaleBand().domain(data.map(d => d.date)).range([0, width]);\n    var y = d3.scaleLinear().range([height, 0]);\n\n    // define the 1st line\n    var valueline = d3\n      .line()\n      .x(function (d) {\n        return x(d.date);\n      })\n      .y(function (d) {\n        return y(d.dailyconfirmed);\n      });\n\n    // define the 2nd line\n    var valueline2 = d3\n      .line()\n      .x(function (d) {\n        return x(d.date);\n      })\n      .y(function (d) {\n        return y(d.dailydeceased);\n      });\n\n    var valueline3 = d3\n      .line()\n      .x(function (d) {\n        return x(d.date);\n      })\n      .y(function (d) {\n        return y(d.dailyrecovered);\n      });\n\n    // append the svg obgect to the body of the page\n    // appends a 'group' element to 'svg'\n    // moves the 'group' element to the top left margin\n    var svg = d3\n      .select(\"#graph\")\n      .append(\"svg\")\n      .attr(\"width\", width + 10 + margin.left + margin.right)\n      .attr(\"height\", height + 15 + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    // format the data\n    data.forEach(function (d) {\n      // d.date = parseTime((d.date + new Date().getFullYear()).split(' ').join('-'));\n      d.dailyconfirmed = +d.dailyconfirmed;\n      d.dailydeceased = +d.dailydeceased;\n      d.dailyrecovered = +d.dailyrecovered;\n    });\n\n    // Scale the range of the data\n    y.domain([\n      0,\n      d3.max(data, function (d) {\n        return Math.max(d.dailyconfirmed, d.dailydeceased, d.dailyrecovered);\n      }),\n    ]);\n\n    var gline1 = svg.append(\"g\");\n    // Add the valueline path.\n\n    gline1\n      .append(\"path\")\n      .data([data])\n      .attr(\"class\", \"line\")\n      .style(\"stroke\", \"#cae075\")\n      .attr(\"d\", valueline);\n    gline1\n      .selectAll(\"line-circle\")\n      .data(data)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"data-circle\")\n      .attr(\"r\", 4)\n      .style(\"fill\", \"#17a2b8\")\n      .attr(\"cx\", function (d) {\n        return x(d.date);\n      })\n      .attr(\"cy\", function (d) {\n        return y(d.dailyconfirmed);\n      })\n      .on(\"mouseenter\", function (d) {\n        that.setTooltip({\n          name: \"confirmed\",\n          date: d.date,\n          value: d.dailyconfirmed,\n          style: {\n            left: window.event.pageX - 50,\n            top: window.event.pageY - 80,\n            opacity: 1,\n          },\n          type: \"multiline-chart\",\n        });\n      })\n      .on(\"mouseleave\", function (d) {\n        that.setTooltip({\n          date: d.date,\n          value: d.dailyconfirmed,\n          style: {\n            left: window.event.pageX,\n            top: window.event.pageY - 128,\n            opacity: 0,\n          },\n          type: \"multiline-chart\",\n        });\n      });\n\n    var gLine2 = svg.append(\"g\");\n    // Add the valueline2 path.\n    gLine2\n      .append(\"path\")\n      .data([data])\n      .attr(\"class\", \"line\")\n      .style(\"stroke\", \"red\")\n      .attr(\"d\", valueline2);\n    gLine2\n      .selectAll(\"line-circle\")\n      .data(data)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"data-circle\")\n      .attr(\"r\", 4)\n      .style(\"fill\", \"#17a2b8\")\n      .attr(\"cx\", function (d) {\n        return x(d.date);\n      })\n      .attr(\"cy\", function (d) {\n        return y(d.dailyrecovered);\n      })\n      .on(\"mouseenter\", function (d) {\n        that.setTooltip({\n          name: \"recovered\",\n          date: d.date,\n          value: d.dailyrecovered,\n          style: {\n            left: window.event.pageX - 50,\n            top: window.event.pageY - 80,\n            opacity: 1,\n          },\n          type: \"multiline-chart\",\n        });\n      })\n      .on(\"mouseleave\", function (d) {\n        that.setTooltip({\n          date: d.date,\n          value: d.dailyrecovered,\n          style: {\n            left: window.event.pageX,\n            top: window.event.pageY - 128,\n            opacity: 0,\n          },\n          type: \"multiline-chart\",\n        });\n      });\n    var gLine3 = svg.append(\"g\");\n    gLine3\n      .append(\"path\")\n      .data([data])\n      .attr(\"class\", \"line\")\n      .style(\"stroke\", \"green\")\n      .attr(\"d\", valueline3);\n    gLine3\n      .selectAll(\"line-circle\")\n      .data(data)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"data-circle\")\n      .attr(\"r\", 4)\n      .style(\"fill\", \"#17a2b8\")\n      .attr(\"cx\", function (d) {\n        return x(d.date);\n      })\n      .attr(\"cy\", function (d) {\n        return y(d.dailydeceased);\n      })\n      .on(\"mouseenter\", function (d) {\n        that.setTooltip({\n          name: \"deaths\",\n          date: d.date,\n          value: d.dailydeceased,\n          style: {\n            left: window.event.pageX - 50,\n            top: window.event.pageY - 80,\n            opacity: 1,\n          },\n          type: \"multiline-chart\",\n        });\n      })\n      .on(\"mouseleave\", function (d) {\n        that.setTooltip({\n          date: d.date,\n          value: d.dailydeceased,\n          style: {\n            left: window.event.pageX,\n            top: window.event.pageY - 128,\n            opacity: 0,\n          },\n          type: \"multiline-chart\",\n        });\n      });\n\n    // Add the X Axis\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"axis-x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x))\n      .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"transform\", \"rotate(-65)\");\n\n    // Add the Y Axis\n    svg.append(\"g\").attr(\"class\", \"axis-y\").call(d3.axisLeft(y));\n  }\n\n  setTooltip(tooltipData) {\n    this.props.setTooltip(tooltipData);\n  }\n  render() {\n    return (\n      <>\n        <div className=\"comparison-container\">\n          <div className=\"comparison-label\">\n            <span>Last 7 days Comparison</span>\n          </div>\n         \n        </div>\n        <div\n          id=\"graph\"\n          style={{\n            backgroundColor: \"#454d55\",\n            color: \"wheat\",\n            height: \"430px\",\n            marginBottom: \"5%\",\n          }}\n          className=\"fadeInUp\"\n        ></div>\n         <div className=\"comparison-legend\">\n            <span className=\"death-label\">Death: Red </span>\n            <span className=\"confirmed-label\">Confirmed: Yellow </span>\n            <span className=\"rec-label\">Recovered: Green </span>\n          </div>\n      </>\n    );\n  }\n}\n\nexport default ComparisonChart;\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nconst CovidTable = props => {\n    const {covidData} = props;\n  const createRows = covidData => {\n    return covidData.map((data,i) => {\n      const { state, confirmed, deaths, recovered } = data;\n      return (\n        <tr key={i}>\n          <td>{state}</td>\n          <td>{confirmed}</td>\n          <td>{deaths}</td>\n          <td>{recovered}</td>\n        </tr>\n      );\n    });\n  };\n  return (\n    <Table size=\"sm\" striped bordered hover responsive variant=\"dark\">\n      <thead>\n        <tr>\n          <th>State</th>\n          <th>Confirmed</th>\n          <th>Deaths</th>\n          <th>Rec</th>\n        </tr>\n      </thead>\n      <tbody>\n       {createRows(covidData)}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default CovidTable;\n","import React, { useState, useEffect } from \"react\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport CovidTable from \"./CovidTable\";\nimport axios from \"axios\";\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nconst TabularInfo = props => {\n  const { covidData, todayData } = props;\n  const [tabularData, setTabularData] = useState([]);\n  useEffect(() => {\n    setTabularData(covidData);\n  }, [covidData]);\n\n  const loadData = eventKey => {\n    // console.log(eventKey);\n    if (eventKey === \"1\") {\n      setTabularData(covidData);\n    } else if (eventKey === \"2\") {\n      setTabularData(todayData);\n    }\n  };\n\n  return (\n    <Container className=\"covid-stats-table-container\" fluid>\n      <Row>\n        <Col>\n          <Tabs id=\"uncontrolled-tab-example\" onSelect={loadData}>\n            <Tab\n              eventKey=\"1\"\n              className=\"covid-table-tabs\"\n              title=\"Total Cases\"\n            ></Tab>\n             \n            <Tab eventKey=\"2\" className=\"covid-table-tabs\" title=\"Today's Cases\">\n            </Tab>\n          </Tabs>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          {tabularData.length > 0 && (\n            <CovidTable covidData={tabularData}></CovidTable>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default TabularInfo;\n","import React from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst InfoUpdate = props => {\n  const { info } = props;\n  const getCurrentDT = () => {\n    var currentdate = new Date();\n    var datetime =\n      \"Last Sync: \" +\n      currentdate.getDate() +\n      \"/\" +\n      (currentdate.getMonth() + 1) +\n      \"/\" +\n      currentdate.getFullYear() +\n      \" @ \" +\n      currentdate.getHours() +\n      \":\" +\n      currentdate.getMinutes() +\n      \":\" +\n      currentdate.getSeconds();\n\n    return datetime;\n  };\n\n  const createList = info => {\n    return info.map(data => {\n      const { state, isConfirmed, isDead, isRecovered } = data;\n      let infoMessage = `${state} : `;\n      if (isDead > 0) infoMessage += `${isDead} new dead. `;\n      if (isConfirmed > 0) infoMessage += `${isConfirmed} new confirmed. `;\n      if (isRecovered > 0) infoMessage += `${isRecovered} new recovered.`;\n      return <ListGroup.Item variant=\"dark\">{infoMessage}</ListGroup.Item>;\n    });\n  };\n\n  return (\n    <Container className=\"info-updtaes\" fluid>\n      <ListGroup variant=\"dark\">\n       { (info && info.length>0) && <ListGroup.Item className=\"info-updtaes dark-theme\" variant=\"dark\">\n          {getCurrentDT()}\n        </ListGroup.Item>\n        }\n        {createList(info)}\n      </ListGroup>\n    </Container>\n  );\n};\n\nexport default InfoUpdate;\n","import { NotificationManager } from 'react-notifications';\nconst notifyCovidUpdates = (data) => {\n    let covidDelta = [...data];\n    covidDelta.shift();\n    let notificationBody = covidDelta.map((data) => {\n        return `${data.state}: ${data.isDead} new deaths , ${data.isRecovered} new recoveries, ${data.isConfirmed} new confirmed cases`;\n    })\n    notificationBody = notificationBody.join('\\n\\n');\n    console.log(data);\n    notifyMe(notificationBody);\n}\n\nfunction notifyMe(text, audioPath) {\n\n    var options = {\n        body: text,\n        icon: './logo192.png'\n    };\n    if (!(\"Notification\" in window)) {\n        alert(\"This browser does not support desktop notification\");\n    }\n    else if (Notification.permission === \"granted\") {\n        var notification = new Notification(\"COVID-19 Updates\", options);\n    }\n    else if (Notification.permission !== \"denied\") {\n        Notification.requestPermission(function (permission) {\n            if (permission === \"granted\") {\n                var notification = new Notification(\"Updates! \", options);\n            }\n        });\n    }\n}\n\nconst notifyAboutCovidUpdates = () => {\n    NotificationManager.info(\"New updates available! \\n\\n Check for Map highlight updates. \\n\\n Scroll to the Notifcation section for more details\")\n}\n\nconst notifyDeviceRegistrations = () => {\n    NotificationManager.info(\"Application synced! \\n\\n Get regular updates by refreshing page!\")\n\n}\n\nexport { notifyCovidUpdates, notifyAboutCovidUpdates, notifyDeviceRegistrations };","import React from \"react\";\nimport MapVisualiser from \"./MapVisualiser\";\nimport Tooltip from \"./Tooltip\";\nimport axios from \"axios\";\nimport mapData from \"./../assets/india.json\";\nimport { parseMapData } from \"../utils/Dataparser\";\nimport ComparisonChart from \"./ComparisonChart\";\nimport { getDelta, storeDelta } from \"../utils/Delta\";\nimport TabularInfo from \"./TabularInfo\";\nimport InfoUpdate from \"./InfoUpdate\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport {\n  notifyCovidUpdates,\n  notifyAboutCovidUpdates,\n  notifyDeviceRegistrations,\n} from \"../utils/Notifier\";\nimport \"react-notifications/lib/notifications.css\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\n\nclass MapVisualiserContainer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      mapData: {},\n      covidData: [],\n      delta: [],\n      timeSeriesData: [],\n      todayData: [],\n    };\n  }\n\n  componentDidMount() {\n    const BASE_URL = \"http://localhost:3030\";\n    const getCOVIDData = () => {\n      axios.get(\"/covid-data\").then((resp) => {\n        let covidData = resp.data.totalCases;\n        const { today } = resp.data;\n        const {delta} = resp.data;\n        ////////////////////////////////\n        if (delta.deltaList && delta.deltaList.length > 0) {\n          this.setState({\n            covidData,\n            delta: delta.deltaList,\n            mapData: { ...parseMapData(mapData, covidData) },\n            todayData: today,\n            timeSeriesData: resp.data.timeAnalysis,\n          });\n          // notifyCovidUpdates(delta.deltaList);\n          notifyAboutCovidUpdates();\n        } else {\n          this.setState({\n            covidData,\n            mapData: { ...parseMapData(mapData, covidData) },\n            todayData: today,\n            timeSeriesData: resp.data.timeAnalysis,\n          });\n        }\n      });\n    };\n    getCOVIDData();\n    //polling on updates\n    const deltaPollDuration = 1800000;\n    // setInterval(() => {\n    //   //getCOVIDDelta();\n    //   getCOVIDData();\n    // }, deltaPollDuration);\n  }\n\n  prepareTooltipBody(tooltipData) {\n    const { state, confirmed, deaths, recovered } = tooltipData;\n    return (\n      <>\n        <span>\n          <strong>{tooltipData.state}</strong>\n        </span>\n        <p>active: {confirmed - deaths - recovered}</p>\n        {/* <p>deaths: {deaths}</p>\n                <p>recovered: {recovered}</p> */}\n      </>\n    );\n  }\n  setTooltip = (tooltipData) => {\n    this.setState({ tooltipData });\n  };\n\n  prepareTooltipBody(tooltipData) {\n    if (tooltipData.type == \"multiline-chart\") {\n      return (\n        <>\n          <h6>\n            {tooltipData.name} : {tooltipData.value}\n          </h6>\n          {/* <p>{tooltipData.value}</p> */}\n          {/* <p>{tooltipData.date}</p> */}\n        </>\n      );\n    }\n    return (\n      <>\n        <h6>\n          <strong>{tooltipData.state}</strong>\n        </h6>\n        <p>confirmed: {tooltipData.confirmed}</p>\n        <p>deaths: {tooltipData.deaths}</p>\n        <p>recovered: {tooltipData.recovered}</p>\n      </>\n    );\n  }\n\n  render() {\n    const { mapData, tooltipData, delta } = this.state;\n    return (\n      <>\n        <Container fluid>\n          <Navbar bg=\"light\" variant=\"light\">\n            <h5 className=\"header-info\" style={{ fontFamily: \"fantasy\" }}>\n              COVID-19 Notification System\n            </h5>\n          </Navbar>\n\n          <Row>\n            <Col md=\"5\">\n              <Row>\n                <Col md=\"auto\">\n                  <span className=\".user-help-info\">\n                    Tap on the States to view State-Wise Cases!\n                  </span>\n                </Col>\n              </Row>\n              <Row>\n                <Col md=\"12\">\n                  <MapVisualiser\n                    delta={delta}\n                    setTooltip={this.setTooltip}\n                    mapData={mapData}\n                  />\n                  {tooltipData && (\n                    <Tooltip style={tooltipData.style}>\n                      {this.prepareTooltipBody(tooltipData)}\n                    </Tooltip>\n                  )}\n                </Col>\n              </Row>\n            </Col>\n            <Col md=\"6\">\n              <TabularInfo\n                covidData={this.state.covidData}\n                todayData={this.state.todayData}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"5\">\n              <InfoUpdate info={this.state.delta}></InfoUpdate>\n            </Col>\n            <Col sm=\"12\" md=\"6\">\n              <ComparisonChart\n                setTooltip={this.setTooltip}\n                timeSeriesData={this.state.timeSeriesData}\n              ></ComparisonChart>\n            </Col>\n          </Row>\n        </Container>\n        <NotificationContainer />\n      </>\n    );\n  }\n}\n\nexport default MapVisualiserContainer;\n","import React from 'react';\nimport MapVisualiserContainer from './components/MapVisualiserContainer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <>\n      <MapVisualiserContainer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}